import sys
import torch
import torchaudio
import torchaudio.functional as F
import torchaudio.transforms as T

from feat_param import povey_win_fn, mel_scale


# class DspFilterBank(torch.nn.Module):
#     def __init__(
#         self,
#         sample_rate: int = 16000,
#         n_fft: int = 512,
#         win_length: int = 400,
#         hop_length: int = 256,
#         n_mels: int = 23,
#         power: float = 2.0,
#     ) -> None:
#         super(DspFilterBank, self).__init__()
#         self.sample_rate = sample_rate
#         self.n_fft = n_fft
#         self.win_length = win_length
#         self.hop_length = hop_length
#         self.power = power
#         self.n_mels = n_mels  # number of mel frequency bins

#         self.window = torch.tensor([
#             0.00000000, 0.00026515, 0.00086143, 0.00171608,
#             0.00279821, 0.00408845, 0.00557293, 0.00724092,
#             0.00908376, 0.01109418, 0.01326593, 0.01559356,
#             0.01807216, 0.02069736, 0.02346512, 0.02637174,
#             0.02941379, 0.03258803, 0.03589144, 0.03932114,
#             0.04287439, 0.04654858, 0.05034120, 0.05424982,
#             0.05827211, 0.06240579, 0.06664867, 0.07099859,
#             0.07545345, 0.08001120, 0.08466981, 0.08942731,
#             0.09428176, 0.09923124, 0.10427384, 0.10940771,
#             0.11463099, 0.11994185, 0.12533848, 0.13081910,
#             0.13638189, 0.14202511, 0.14774701, 0.15354580,
#             0.15941978, 0.16536720, 0.17138635, 0.17747550,
#             0.18363294, 0.18985698, 0.19614591, 0.20249803,
#             0.20891169, 0.21538515, 0.22191676, 0.22850484,
#             0.23514770, 0.24184367, 0.24859110, 0.25538829,
#             0.26223361, 0.26912537, 0.27606189, 0.28304157,
#             0.29006270, 0.29712364, 0.30422276, 0.31135836,
#             0.31852883, 0.32573253, 0.33296776, 0.34023294,
#             0.34752637, 0.35484645, 0.36219150, 0.36955994,
#             0.37695011, 0.38436037, 0.39178911, 0.39923468,
#             0.40669549, 0.41416988, 0.42165625, 0.42915303,
#             0.43665853, 0.44417122, 0.45168945, 0.45921165,
#             0.46673620, 0.47426149, 0.48178601, 0.48930812,
#             0.49682623, 0.50433880, 0.51184428, 0.51934105,
#             0.52682763, 0.53430241, 0.54176390, 0.54921049,
#             0.55664068, 0.56405294, 0.57144576, 0.57881767,
#             0.58616710, 0.59349257, 0.60079259, 0.60806572,
#             0.61531037, 0.62252522, 0.62970877, 0.63685948,
#             0.64397603, 0.65105689, 0.65810072, 0.66510606,
#             0.67207152, 0.67899567, 0.68587720, 0.69271463,
#             0.69950676, 0.70625204, 0.71294928, 0.71959710,
#             0.72619420, 0.73273921, 0.73923087, 0.74566793,
#             0.75204909, 0.75837308, 0.76463866, 0.77084464,
#             0.77698970, 0.78307271, 0.78909242, 0.79504770,
#             0.80093735, 0.80676019, 0.81251514, 0.81820107,
#             0.82381684, 0.82936132, 0.83483344, 0.84023219,
#             0.84555650, 0.85080528, 0.85597754, 0.86107224,
#             0.86608845, 0.87102509, 0.87588131, 0.88065618,
#             0.88534868, 0.88995790, 0.89448297, 0.89892310,
#             0.90327728, 0.90754479, 0.91172469, 0.91581625,
#             0.91981870, 0.92373115, 0.92755300, 0.93128335,
#             0.93492162, 0.93846697, 0.94191885, 0.94527650,
#             0.94853932, 0.95170665, 0.95477784, 0.95775241,
#             0.96062970, 0.96340919, 0.96609032, 0.96867263,
#             0.97115552, 0.97353864, 0.97582138, 0.97800344,
#             0.98008436, 0.98206365, 0.98394102, 0.98571610,
#             0.98738855, 0.98895806, 0.99042428, 0.99178690,
#             0.99304581, 0.99420059, 0.99525112, 0.99619716,
#             0.99703854, 0.99777514, 0.99840671, 0.99893326,
#             0.99935460, 0.99967068, 0.99988145, 0.99998683,
#             0.99998683, 0.99988145, 0.99967068, 0.99935460,
#             0.99893326, 0.99840671, 0.99777514, 0.99703854,
#             0.99619716, 0.99525112, 0.99420059, 0.99304581,
#             0.99178690, 0.99042428, 0.98895806, 0.98738855,
#             0.98571610, 0.98394102, 0.98206365, 0.98008436,
#             0.97800344, 0.97582138, 0.97353864, 0.97115552,
#             0.96867263, 0.96609032, 0.96340919, 0.96062970,
#             0.95775241, 0.95477784, 0.95170665, 0.94853932,
#             0.94527650, 0.94191885, 0.93846697, 0.93492162,
#             0.93128335, 0.92755300, 0.92373115, 0.91981870,
#             0.91581625, 0.91172469, 0.90754479, 0.90327728,
#             0.89892310, 0.89448297, 0.88995790, 0.88534868,
#             0.88065618, 0.87588131, 0.87102509, 0.86608845,
#             0.86107224, 0.85597754, 0.85080528, 0.84555650,
#             0.84023219, 0.83483344, 0.82936132, 0.82381684,
#             0.81820107, 0.81251514, 0.80676019, 0.80093735,
#             0.79504770, 0.78909242, 0.78307271, 0.77698970,
#             0.77084464, 0.76463866, 0.75837308, 0.75204909,
#             0.74566793, 0.73923087, 0.73273921, 0.72619420,
#             0.71959710, 0.71294928, 0.70625204, 0.69950676,
#             0.69271463, 0.68587720, 0.67899567, 0.67207152,
#             0.66510606, 0.65810072, 0.65105689, 0.64397603,
#             0.63685948, 0.62970877, 0.62252522, 0.61531037,
#             0.60806572, 0.60079259, 0.59349257, 0.58616710,
#             0.57881767, 0.57144576, 0.56405294, 0.55664068,
#             0.54921049, 0.54176390, 0.53430241, 0.52682763,
#             0.51934105, 0.51184428, 0.50433880, 0.49682623,
#             0.48930812, 0.48178601, 0.47426149, 0.46673620,
#             0.45921165, 0.45168945, 0.44417122, 0.43665853,
#             0.42915303, 0.42165625, 0.41416988, 0.40669549,
#             0.39923468, 0.39178911, 0.38436037, 0.37695011,
#             0.36955994, 0.36219150, 0.35484645, 0.34752637,
#             0.34023294, 0.33296776, 0.32573253, 0.31852883,
#             0.31135836, 0.30422276, 0.29712364, 0.29006270,
#             0.28304157, 0.27606189, 0.26912537, 0.26223361,
#             0.25538829, 0.24859110, 0.24184367, 0.23514770,
#             0.22850484, 0.22191676, 0.21538515, 0.20891169,
#             0.20249803, 0.19614591, 0.18985698, 0.18363294,
#             0.17747550, 0.17138635, 0.16536720, 0.15941978,
#             0.15354580, 0.14774701, 0.14202511, 0.13638189,
#             0.13081910, 0.12533848, 0.11994185, 0.11463099,
#             0.10940771, 0.10427384, 0.09923124, 0.09428176,
#             0.08942731, 0.08466981, 0.08001120, 0.07545345,
#             0.07099859, 0.06664867, 0.06240579, 0.05827211,
#             0.05424982, 0.05034120, 0.04654858, 0.04287439,
#             0.03932114, 0.03589144, 0.03258803, 0.02941379,
#             0.02637174, 0.02346512, 0.02069736, 0.01807216,
#             0.01559356, 0.01326593, 0.01109418, 0.00908376,
#             0.00724092, 0.00557293, 0.00408845, 0.00279821,
#             0.00171608, 0.00086143, 0.00026515, 0.00000000 
#             ], dtype=torch.float32
#         )
        
#         self.fb = mel_scale


#     def forward(self, waveform: Tensor) -> Tensor:
#         r"""
#         Args:
#             waveform (Tensor): Tensor of audio of dimension (..., time).

#         Returns:
#             Tensor: Mel frequency spectrogram of size (..., ``n_mels``, time).
#         """

#         # pack batch
#         shape = waveform.size()
#         waveform = waveform.reshape(-1, shape[-1])

#         spec_f = torch.stft(
#             input=waveform,
#             n_fft=self.n_fft,
#             hop_length=self.hop_length,
#             win_length=self.win_length,
#             window=self.window,
#         )

#         # unpack batch
#         spec_f = spec_f.reshape(shape[:-1] + spec_f.shape[-2:])

#         specgram = spec_f.abs().pow(self.power)

#         # filter
#         mel_specgram = torch.matmul(specgram.transpose(-1, -2), self.fb).transpose(-1, -2)
#         return mel_specgram


SAMPLE_SPEECH = sys.argv[1]
SPEECH_WAVEFORM, SAMPLE_RATE = torchaudio.load(SAMPLE_SPEECH)

spec_f = torch.stft(
        input=SPEECH_WAVEFORM,
        n_fft=512,
        hop_length=256,
        win_length=400,
        window=povey_win_fn,
    )
print(spec_f)